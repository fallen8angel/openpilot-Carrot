#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6175132429151416991) {
   out_6175132429151416991[0] = 0;
   out_6175132429151416991[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6175132429151416991[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6175132429151416991[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6175132429151416991[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6175132429151416991[5] = -sin(in_vec[1]);
   out_6175132429151416991[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6175132429151416991[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6175132429151416991[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6175132429151416991[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6175132429151416991[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6175132429151416991[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6175132429151416991[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6175132429151416991[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6175132429151416991[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6175132429151416991[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6175132429151416991[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6175132429151416991[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7951279187815065907) {
   out_7951279187815065907[0] = delta_x[0] + nom_x[0];
   out_7951279187815065907[1] = delta_x[1] + nom_x[1];
   out_7951279187815065907[2] = delta_x[2] + nom_x[2];
   out_7951279187815065907[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7951279187815065907[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7951279187815065907[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7951279187815065907[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7951279187815065907[7] = delta_x[6] + nom_x[7];
   out_7951279187815065907[8] = delta_x[7] + nom_x[8];
   out_7951279187815065907[9] = delta_x[8] + nom_x[9];
   out_7951279187815065907[10] = delta_x[9] + nom_x[10];
   out_7951279187815065907[11] = delta_x[10] + nom_x[11];
   out_7951279187815065907[12] = delta_x[11] + nom_x[12];
   out_7951279187815065907[13] = delta_x[12] + nom_x[13];
   out_7951279187815065907[14] = delta_x[13] + nom_x[14];
   out_7951279187815065907[15] = delta_x[14] + nom_x[15];
   out_7951279187815065907[16] = delta_x[15] + nom_x[16];
   out_7951279187815065907[17] = delta_x[16] + nom_x[17];
   out_7951279187815065907[18] = delta_x[17] + nom_x[18];
   out_7951279187815065907[19] = delta_x[18] + nom_x[19];
   out_7951279187815065907[20] = delta_x[19] + nom_x[20];
   out_7951279187815065907[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_637224016576002731) {
   out_637224016576002731[0] = -nom_x[0] + true_x[0];
   out_637224016576002731[1] = -nom_x[1] + true_x[1];
   out_637224016576002731[2] = -nom_x[2] + true_x[2];
   out_637224016576002731[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_637224016576002731[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_637224016576002731[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_637224016576002731[6] = -nom_x[7] + true_x[7];
   out_637224016576002731[7] = -nom_x[8] + true_x[8];
   out_637224016576002731[8] = -nom_x[9] + true_x[9];
   out_637224016576002731[9] = -nom_x[10] + true_x[10];
   out_637224016576002731[10] = -nom_x[11] + true_x[11];
   out_637224016576002731[11] = -nom_x[12] + true_x[12];
   out_637224016576002731[12] = -nom_x[13] + true_x[13];
   out_637224016576002731[13] = -nom_x[14] + true_x[14];
   out_637224016576002731[14] = -nom_x[15] + true_x[15];
   out_637224016576002731[15] = -nom_x[16] + true_x[16];
   out_637224016576002731[16] = -nom_x[17] + true_x[17];
   out_637224016576002731[17] = -nom_x[18] + true_x[18];
   out_637224016576002731[18] = -nom_x[19] + true_x[19];
   out_637224016576002731[19] = -nom_x[20] + true_x[20];
   out_637224016576002731[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8696275111750558888) {
   out_8696275111750558888[0] = 1.0;
   out_8696275111750558888[1] = 0;
   out_8696275111750558888[2] = 0;
   out_8696275111750558888[3] = 0;
   out_8696275111750558888[4] = 0;
   out_8696275111750558888[5] = 0;
   out_8696275111750558888[6] = 0;
   out_8696275111750558888[7] = 0;
   out_8696275111750558888[8] = 0;
   out_8696275111750558888[9] = 0;
   out_8696275111750558888[10] = 0;
   out_8696275111750558888[11] = 0;
   out_8696275111750558888[12] = 0;
   out_8696275111750558888[13] = 0;
   out_8696275111750558888[14] = 0;
   out_8696275111750558888[15] = 0;
   out_8696275111750558888[16] = 0;
   out_8696275111750558888[17] = 0;
   out_8696275111750558888[18] = 0;
   out_8696275111750558888[19] = 0;
   out_8696275111750558888[20] = 0;
   out_8696275111750558888[21] = 0;
   out_8696275111750558888[22] = 1.0;
   out_8696275111750558888[23] = 0;
   out_8696275111750558888[24] = 0;
   out_8696275111750558888[25] = 0;
   out_8696275111750558888[26] = 0;
   out_8696275111750558888[27] = 0;
   out_8696275111750558888[28] = 0;
   out_8696275111750558888[29] = 0;
   out_8696275111750558888[30] = 0;
   out_8696275111750558888[31] = 0;
   out_8696275111750558888[32] = 0;
   out_8696275111750558888[33] = 0;
   out_8696275111750558888[34] = 0;
   out_8696275111750558888[35] = 0;
   out_8696275111750558888[36] = 0;
   out_8696275111750558888[37] = 0;
   out_8696275111750558888[38] = 0;
   out_8696275111750558888[39] = 0;
   out_8696275111750558888[40] = 0;
   out_8696275111750558888[41] = 0;
   out_8696275111750558888[42] = 0;
   out_8696275111750558888[43] = 0;
   out_8696275111750558888[44] = 1.0;
   out_8696275111750558888[45] = 0;
   out_8696275111750558888[46] = 0;
   out_8696275111750558888[47] = 0;
   out_8696275111750558888[48] = 0;
   out_8696275111750558888[49] = 0;
   out_8696275111750558888[50] = 0;
   out_8696275111750558888[51] = 0;
   out_8696275111750558888[52] = 0;
   out_8696275111750558888[53] = 0;
   out_8696275111750558888[54] = 0;
   out_8696275111750558888[55] = 0;
   out_8696275111750558888[56] = 0;
   out_8696275111750558888[57] = 0;
   out_8696275111750558888[58] = 0;
   out_8696275111750558888[59] = 0;
   out_8696275111750558888[60] = 0;
   out_8696275111750558888[61] = 0;
   out_8696275111750558888[62] = 0;
   out_8696275111750558888[63] = 0;
   out_8696275111750558888[64] = 0;
   out_8696275111750558888[65] = 0;
   out_8696275111750558888[66] = -0.5*state[4];
   out_8696275111750558888[67] = -0.5*state[5];
   out_8696275111750558888[68] = -0.5*state[6];
   out_8696275111750558888[69] = 0;
   out_8696275111750558888[70] = 0;
   out_8696275111750558888[71] = 0;
   out_8696275111750558888[72] = 0;
   out_8696275111750558888[73] = 0;
   out_8696275111750558888[74] = 0;
   out_8696275111750558888[75] = 0;
   out_8696275111750558888[76] = 0;
   out_8696275111750558888[77] = 0;
   out_8696275111750558888[78] = 0;
   out_8696275111750558888[79] = 0;
   out_8696275111750558888[80] = 0;
   out_8696275111750558888[81] = 0;
   out_8696275111750558888[82] = 0;
   out_8696275111750558888[83] = 0;
   out_8696275111750558888[84] = 0;
   out_8696275111750558888[85] = 0;
   out_8696275111750558888[86] = 0;
   out_8696275111750558888[87] = 0.5*state[3];
   out_8696275111750558888[88] = 0.5*state[6];
   out_8696275111750558888[89] = -0.5*state[5];
   out_8696275111750558888[90] = 0;
   out_8696275111750558888[91] = 0;
   out_8696275111750558888[92] = 0;
   out_8696275111750558888[93] = 0;
   out_8696275111750558888[94] = 0;
   out_8696275111750558888[95] = 0;
   out_8696275111750558888[96] = 0;
   out_8696275111750558888[97] = 0;
   out_8696275111750558888[98] = 0;
   out_8696275111750558888[99] = 0;
   out_8696275111750558888[100] = 0;
   out_8696275111750558888[101] = 0;
   out_8696275111750558888[102] = 0;
   out_8696275111750558888[103] = 0;
   out_8696275111750558888[104] = 0;
   out_8696275111750558888[105] = 0;
   out_8696275111750558888[106] = 0;
   out_8696275111750558888[107] = 0;
   out_8696275111750558888[108] = -0.5*state[6];
   out_8696275111750558888[109] = 0.5*state[3];
   out_8696275111750558888[110] = 0.5*state[4];
   out_8696275111750558888[111] = 0;
   out_8696275111750558888[112] = 0;
   out_8696275111750558888[113] = 0;
   out_8696275111750558888[114] = 0;
   out_8696275111750558888[115] = 0;
   out_8696275111750558888[116] = 0;
   out_8696275111750558888[117] = 0;
   out_8696275111750558888[118] = 0;
   out_8696275111750558888[119] = 0;
   out_8696275111750558888[120] = 0;
   out_8696275111750558888[121] = 0;
   out_8696275111750558888[122] = 0;
   out_8696275111750558888[123] = 0;
   out_8696275111750558888[124] = 0;
   out_8696275111750558888[125] = 0;
   out_8696275111750558888[126] = 0;
   out_8696275111750558888[127] = 0;
   out_8696275111750558888[128] = 0;
   out_8696275111750558888[129] = 0.5*state[5];
   out_8696275111750558888[130] = -0.5*state[4];
   out_8696275111750558888[131] = 0.5*state[3];
   out_8696275111750558888[132] = 0;
   out_8696275111750558888[133] = 0;
   out_8696275111750558888[134] = 0;
   out_8696275111750558888[135] = 0;
   out_8696275111750558888[136] = 0;
   out_8696275111750558888[137] = 0;
   out_8696275111750558888[138] = 0;
   out_8696275111750558888[139] = 0;
   out_8696275111750558888[140] = 0;
   out_8696275111750558888[141] = 0;
   out_8696275111750558888[142] = 0;
   out_8696275111750558888[143] = 0;
   out_8696275111750558888[144] = 0;
   out_8696275111750558888[145] = 0;
   out_8696275111750558888[146] = 0;
   out_8696275111750558888[147] = 0;
   out_8696275111750558888[148] = 0;
   out_8696275111750558888[149] = 0;
   out_8696275111750558888[150] = 0;
   out_8696275111750558888[151] = 0;
   out_8696275111750558888[152] = 0;
   out_8696275111750558888[153] = 1.0;
   out_8696275111750558888[154] = 0;
   out_8696275111750558888[155] = 0;
   out_8696275111750558888[156] = 0;
   out_8696275111750558888[157] = 0;
   out_8696275111750558888[158] = 0;
   out_8696275111750558888[159] = 0;
   out_8696275111750558888[160] = 0;
   out_8696275111750558888[161] = 0;
   out_8696275111750558888[162] = 0;
   out_8696275111750558888[163] = 0;
   out_8696275111750558888[164] = 0;
   out_8696275111750558888[165] = 0;
   out_8696275111750558888[166] = 0;
   out_8696275111750558888[167] = 0;
   out_8696275111750558888[168] = 0;
   out_8696275111750558888[169] = 0;
   out_8696275111750558888[170] = 0;
   out_8696275111750558888[171] = 0;
   out_8696275111750558888[172] = 0;
   out_8696275111750558888[173] = 0;
   out_8696275111750558888[174] = 0;
   out_8696275111750558888[175] = 1.0;
   out_8696275111750558888[176] = 0;
   out_8696275111750558888[177] = 0;
   out_8696275111750558888[178] = 0;
   out_8696275111750558888[179] = 0;
   out_8696275111750558888[180] = 0;
   out_8696275111750558888[181] = 0;
   out_8696275111750558888[182] = 0;
   out_8696275111750558888[183] = 0;
   out_8696275111750558888[184] = 0;
   out_8696275111750558888[185] = 0;
   out_8696275111750558888[186] = 0;
   out_8696275111750558888[187] = 0;
   out_8696275111750558888[188] = 0;
   out_8696275111750558888[189] = 0;
   out_8696275111750558888[190] = 0;
   out_8696275111750558888[191] = 0;
   out_8696275111750558888[192] = 0;
   out_8696275111750558888[193] = 0;
   out_8696275111750558888[194] = 0;
   out_8696275111750558888[195] = 0;
   out_8696275111750558888[196] = 0;
   out_8696275111750558888[197] = 1.0;
   out_8696275111750558888[198] = 0;
   out_8696275111750558888[199] = 0;
   out_8696275111750558888[200] = 0;
   out_8696275111750558888[201] = 0;
   out_8696275111750558888[202] = 0;
   out_8696275111750558888[203] = 0;
   out_8696275111750558888[204] = 0;
   out_8696275111750558888[205] = 0;
   out_8696275111750558888[206] = 0;
   out_8696275111750558888[207] = 0;
   out_8696275111750558888[208] = 0;
   out_8696275111750558888[209] = 0;
   out_8696275111750558888[210] = 0;
   out_8696275111750558888[211] = 0;
   out_8696275111750558888[212] = 0;
   out_8696275111750558888[213] = 0;
   out_8696275111750558888[214] = 0;
   out_8696275111750558888[215] = 0;
   out_8696275111750558888[216] = 0;
   out_8696275111750558888[217] = 0;
   out_8696275111750558888[218] = 0;
   out_8696275111750558888[219] = 1.0;
   out_8696275111750558888[220] = 0;
   out_8696275111750558888[221] = 0;
   out_8696275111750558888[222] = 0;
   out_8696275111750558888[223] = 0;
   out_8696275111750558888[224] = 0;
   out_8696275111750558888[225] = 0;
   out_8696275111750558888[226] = 0;
   out_8696275111750558888[227] = 0;
   out_8696275111750558888[228] = 0;
   out_8696275111750558888[229] = 0;
   out_8696275111750558888[230] = 0;
   out_8696275111750558888[231] = 0;
   out_8696275111750558888[232] = 0;
   out_8696275111750558888[233] = 0;
   out_8696275111750558888[234] = 0;
   out_8696275111750558888[235] = 0;
   out_8696275111750558888[236] = 0;
   out_8696275111750558888[237] = 0;
   out_8696275111750558888[238] = 0;
   out_8696275111750558888[239] = 0;
   out_8696275111750558888[240] = 0;
   out_8696275111750558888[241] = 1.0;
   out_8696275111750558888[242] = 0;
   out_8696275111750558888[243] = 0;
   out_8696275111750558888[244] = 0;
   out_8696275111750558888[245] = 0;
   out_8696275111750558888[246] = 0;
   out_8696275111750558888[247] = 0;
   out_8696275111750558888[248] = 0;
   out_8696275111750558888[249] = 0;
   out_8696275111750558888[250] = 0;
   out_8696275111750558888[251] = 0;
   out_8696275111750558888[252] = 0;
   out_8696275111750558888[253] = 0;
   out_8696275111750558888[254] = 0;
   out_8696275111750558888[255] = 0;
   out_8696275111750558888[256] = 0;
   out_8696275111750558888[257] = 0;
   out_8696275111750558888[258] = 0;
   out_8696275111750558888[259] = 0;
   out_8696275111750558888[260] = 0;
   out_8696275111750558888[261] = 0;
   out_8696275111750558888[262] = 0;
   out_8696275111750558888[263] = 1.0;
   out_8696275111750558888[264] = 0;
   out_8696275111750558888[265] = 0;
   out_8696275111750558888[266] = 0;
   out_8696275111750558888[267] = 0;
   out_8696275111750558888[268] = 0;
   out_8696275111750558888[269] = 0;
   out_8696275111750558888[270] = 0;
   out_8696275111750558888[271] = 0;
   out_8696275111750558888[272] = 0;
   out_8696275111750558888[273] = 0;
   out_8696275111750558888[274] = 0;
   out_8696275111750558888[275] = 0;
   out_8696275111750558888[276] = 0;
   out_8696275111750558888[277] = 0;
   out_8696275111750558888[278] = 0;
   out_8696275111750558888[279] = 0;
   out_8696275111750558888[280] = 0;
   out_8696275111750558888[281] = 0;
   out_8696275111750558888[282] = 0;
   out_8696275111750558888[283] = 0;
   out_8696275111750558888[284] = 0;
   out_8696275111750558888[285] = 1.0;
   out_8696275111750558888[286] = 0;
   out_8696275111750558888[287] = 0;
   out_8696275111750558888[288] = 0;
   out_8696275111750558888[289] = 0;
   out_8696275111750558888[290] = 0;
   out_8696275111750558888[291] = 0;
   out_8696275111750558888[292] = 0;
   out_8696275111750558888[293] = 0;
   out_8696275111750558888[294] = 0;
   out_8696275111750558888[295] = 0;
   out_8696275111750558888[296] = 0;
   out_8696275111750558888[297] = 0;
   out_8696275111750558888[298] = 0;
   out_8696275111750558888[299] = 0;
   out_8696275111750558888[300] = 0;
   out_8696275111750558888[301] = 0;
   out_8696275111750558888[302] = 0;
   out_8696275111750558888[303] = 0;
   out_8696275111750558888[304] = 0;
   out_8696275111750558888[305] = 0;
   out_8696275111750558888[306] = 0;
   out_8696275111750558888[307] = 1.0;
   out_8696275111750558888[308] = 0;
   out_8696275111750558888[309] = 0;
   out_8696275111750558888[310] = 0;
   out_8696275111750558888[311] = 0;
   out_8696275111750558888[312] = 0;
   out_8696275111750558888[313] = 0;
   out_8696275111750558888[314] = 0;
   out_8696275111750558888[315] = 0;
   out_8696275111750558888[316] = 0;
   out_8696275111750558888[317] = 0;
   out_8696275111750558888[318] = 0;
   out_8696275111750558888[319] = 0;
   out_8696275111750558888[320] = 0;
   out_8696275111750558888[321] = 0;
   out_8696275111750558888[322] = 0;
   out_8696275111750558888[323] = 0;
   out_8696275111750558888[324] = 0;
   out_8696275111750558888[325] = 0;
   out_8696275111750558888[326] = 0;
   out_8696275111750558888[327] = 0;
   out_8696275111750558888[328] = 0;
   out_8696275111750558888[329] = 1.0;
   out_8696275111750558888[330] = 0;
   out_8696275111750558888[331] = 0;
   out_8696275111750558888[332] = 0;
   out_8696275111750558888[333] = 0;
   out_8696275111750558888[334] = 0;
   out_8696275111750558888[335] = 0;
   out_8696275111750558888[336] = 0;
   out_8696275111750558888[337] = 0;
   out_8696275111750558888[338] = 0;
   out_8696275111750558888[339] = 0;
   out_8696275111750558888[340] = 0;
   out_8696275111750558888[341] = 0;
   out_8696275111750558888[342] = 0;
   out_8696275111750558888[343] = 0;
   out_8696275111750558888[344] = 0;
   out_8696275111750558888[345] = 0;
   out_8696275111750558888[346] = 0;
   out_8696275111750558888[347] = 0;
   out_8696275111750558888[348] = 0;
   out_8696275111750558888[349] = 0;
   out_8696275111750558888[350] = 0;
   out_8696275111750558888[351] = 1.0;
   out_8696275111750558888[352] = 0;
   out_8696275111750558888[353] = 0;
   out_8696275111750558888[354] = 0;
   out_8696275111750558888[355] = 0;
   out_8696275111750558888[356] = 0;
   out_8696275111750558888[357] = 0;
   out_8696275111750558888[358] = 0;
   out_8696275111750558888[359] = 0;
   out_8696275111750558888[360] = 0;
   out_8696275111750558888[361] = 0;
   out_8696275111750558888[362] = 0;
   out_8696275111750558888[363] = 0;
   out_8696275111750558888[364] = 0;
   out_8696275111750558888[365] = 0;
   out_8696275111750558888[366] = 0;
   out_8696275111750558888[367] = 0;
   out_8696275111750558888[368] = 0;
   out_8696275111750558888[369] = 0;
   out_8696275111750558888[370] = 0;
   out_8696275111750558888[371] = 0;
   out_8696275111750558888[372] = 0;
   out_8696275111750558888[373] = 1.0;
   out_8696275111750558888[374] = 0;
   out_8696275111750558888[375] = 0;
   out_8696275111750558888[376] = 0;
   out_8696275111750558888[377] = 0;
   out_8696275111750558888[378] = 0;
   out_8696275111750558888[379] = 0;
   out_8696275111750558888[380] = 0;
   out_8696275111750558888[381] = 0;
   out_8696275111750558888[382] = 0;
   out_8696275111750558888[383] = 0;
   out_8696275111750558888[384] = 0;
   out_8696275111750558888[385] = 0;
   out_8696275111750558888[386] = 0;
   out_8696275111750558888[387] = 0;
   out_8696275111750558888[388] = 0;
   out_8696275111750558888[389] = 0;
   out_8696275111750558888[390] = 0;
   out_8696275111750558888[391] = 0;
   out_8696275111750558888[392] = 0;
   out_8696275111750558888[393] = 0;
   out_8696275111750558888[394] = 0;
   out_8696275111750558888[395] = 1.0;
   out_8696275111750558888[396] = 0;
   out_8696275111750558888[397] = 0;
   out_8696275111750558888[398] = 0;
   out_8696275111750558888[399] = 0;
   out_8696275111750558888[400] = 0;
   out_8696275111750558888[401] = 0;
   out_8696275111750558888[402] = 0;
   out_8696275111750558888[403] = 0;
   out_8696275111750558888[404] = 0;
   out_8696275111750558888[405] = 0;
   out_8696275111750558888[406] = 0;
   out_8696275111750558888[407] = 0;
   out_8696275111750558888[408] = 0;
   out_8696275111750558888[409] = 0;
   out_8696275111750558888[410] = 0;
   out_8696275111750558888[411] = 0;
   out_8696275111750558888[412] = 0;
   out_8696275111750558888[413] = 0;
   out_8696275111750558888[414] = 0;
   out_8696275111750558888[415] = 0;
   out_8696275111750558888[416] = 0;
   out_8696275111750558888[417] = 1.0;
   out_8696275111750558888[418] = 0;
   out_8696275111750558888[419] = 0;
   out_8696275111750558888[420] = 0;
   out_8696275111750558888[421] = 0;
   out_8696275111750558888[422] = 0;
   out_8696275111750558888[423] = 0;
   out_8696275111750558888[424] = 0;
   out_8696275111750558888[425] = 0;
   out_8696275111750558888[426] = 0;
   out_8696275111750558888[427] = 0;
   out_8696275111750558888[428] = 0;
   out_8696275111750558888[429] = 0;
   out_8696275111750558888[430] = 0;
   out_8696275111750558888[431] = 0;
   out_8696275111750558888[432] = 0;
   out_8696275111750558888[433] = 0;
   out_8696275111750558888[434] = 0;
   out_8696275111750558888[435] = 0;
   out_8696275111750558888[436] = 0;
   out_8696275111750558888[437] = 0;
   out_8696275111750558888[438] = 0;
   out_8696275111750558888[439] = 1.0;
   out_8696275111750558888[440] = 0;
   out_8696275111750558888[441] = 0;
   out_8696275111750558888[442] = 0;
   out_8696275111750558888[443] = 0;
   out_8696275111750558888[444] = 0;
   out_8696275111750558888[445] = 0;
   out_8696275111750558888[446] = 0;
   out_8696275111750558888[447] = 0;
   out_8696275111750558888[448] = 0;
   out_8696275111750558888[449] = 0;
   out_8696275111750558888[450] = 0;
   out_8696275111750558888[451] = 0;
   out_8696275111750558888[452] = 0;
   out_8696275111750558888[453] = 0;
   out_8696275111750558888[454] = 0;
   out_8696275111750558888[455] = 0;
   out_8696275111750558888[456] = 0;
   out_8696275111750558888[457] = 0;
   out_8696275111750558888[458] = 0;
   out_8696275111750558888[459] = 0;
   out_8696275111750558888[460] = 0;
   out_8696275111750558888[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1735690330431513099) {
   out_1735690330431513099[0] = dt*state[7] + state[0];
   out_1735690330431513099[1] = dt*state[8] + state[1];
   out_1735690330431513099[2] = dt*state[9] + state[2];
   out_1735690330431513099[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1735690330431513099[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1735690330431513099[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1735690330431513099[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1735690330431513099[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1735690330431513099[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1735690330431513099[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1735690330431513099[10] = state[10];
   out_1735690330431513099[11] = state[11];
   out_1735690330431513099[12] = state[12];
   out_1735690330431513099[13] = state[13];
   out_1735690330431513099[14] = state[14];
   out_1735690330431513099[15] = state[15];
   out_1735690330431513099[16] = state[16];
   out_1735690330431513099[17] = state[17];
   out_1735690330431513099[18] = state[18];
   out_1735690330431513099[19] = state[19];
   out_1735690330431513099[20] = state[20];
   out_1735690330431513099[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1808211745531574140) {
   out_1808211745531574140[0] = 1;
   out_1808211745531574140[1] = 0;
   out_1808211745531574140[2] = 0;
   out_1808211745531574140[3] = 0;
   out_1808211745531574140[4] = 0;
   out_1808211745531574140[5] = 0;
   out_1808211745531574140[6] = dt;
   out_1808211745531574140[7] = 0;
   out_1808211745531574140[8] = 0;
   out_1808211745531574140[9] = 0;
   out_1808211745531574140[10] = 0;
   out_1808211745531574140[11] = 0;
   out_1808211745531574140[12] = 0;
   out_1808211745531574140[13] = 0;
   out_1808211745531574140[14] = 0;
   out_1808211745531574140[15] = 0;
   out_1808211745531574140[16] = 0;
   out_1808211745531574140[17] = 0;
   out_1808211745531574140[18] = 0;
   out_1808211745531574140[19] = 0;
   out_1808211745531574140[20] = 0;
   out_1808211745531574140[21] = 0;
   out_1808211745531574140[22] = 1;
   out_1808211745531574140[23] = 0;
   out_1808211745531574140[24] = 0;
   out_1808211745531574140[25] = 0;
   out_1808211745531574140[26] = 0;
   out_1808211745531574140[27] = 0;
   out_1808211745531574140[28] = dt;
   out_1808211745531574140[29] = 0;
   out_1808211745531574140[30] = 0;
   out_1808211745531574140[31] = 0;
   out_1808211745531574140[32] = 0;
   out_1808211745531574140[33] = 0;
   out_1808211745531574140[34] = 0;
   out_1808211745531574140[35] = 0;
   out_1808211745531574140[36] = 0;
   out_1808211745531574140[37] = 0;
   out_1808211745531574140[38] = 0;
   out_1808211745531574140[39] = 0;
   out_1808211745531574140[40] = 0;
   out_1808211745531574140[41] = 0;
   out_1808211745531574140[42] = 0;
   out_1808211745531574140[43] = 0;
   out_1808211745531574140[44] = 1;
   out_1808211745531574140[45] = 0;
   out_1808211745531574140[46] = 0;
   out_1808211745531574140[47] = 0;
   out_1808211745531574140[48] = 0;
   out_1808211745531574140[49] = 0;
   out_1808211745531574140[50] = dt;
   out_1808211745531574140[51] = 0;
   out_1808211745531574140[52] = 0;
   out_1808211745531574140[53] = 0;
   out_1808211745531574140[54] = 0;
   out_1808211745531574140[55] = 0;
   out_1808211745531574140[56] = 0;
   out_1808211745531574140[57] = 0;
   out_1808211745531574140[58] = 0;
   out_1808211745531574140[59] = 0;
   out_1808211745531574140[60] = 0;
   out_1808211745531574140[61] = 0;
   out_1808211745531574140[62] = 0;
   out_1808211745531574140[63] = 0;
   out_1808211745531574140[64] = 0;
   out_1808211745531574140[65] = 0;
   out_1808211745531574140[66] = 1;
   out_1808211745531574140[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1808211745531574140[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1808211745531574140[69] = 0;
   out_1808211745531574140[70] = 0;
   out_1808211745531574140[71] = 0;
   out_1808211745531574140[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1808211745531574140[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1808211745531574140[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1808211745531574140[75] = 0;
   out_1808211745531574140[76] = 0;
   out_1808211745531574140[77] = 0;
   out_1808211745531574140[78] = 0;
   out_1808211745531574140[79] = 0;
   out_1808211745531574140[80] = 0;
   out_1808211745531574140[81] = 0;
   out_1808211745531574140[82] = 0;
   out_1808211745531574140[83] = 0;
   out_1808211745531574140[84] = 0;
   out_1808211745531574140[85] = 0;
   out_1808211745531574140[86] = 0;
   out_1808211745531574140[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1808211745531574140[88] = 1;
   out_1808211745531574140[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1808211745531574140[90] = 0;
   out_1808211745531574140[91] = 0;
   out_1808211745531574140[92] = 0;
   out_1808211745531574140[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1808211745531574140[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1808211745531574140[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1808211745531574140[96] = 0;
   out_1808211745531574140[97] = 0;
   out_1808211745531574140[98] = 0;
   out_1808211745531574140[99] = 0;
   out_1808211745531574140[100] = 0;
   out_1808211745531574140[101] = 0;
   out_1808211745531574140[102] = 0;
   out_1808211745531574140[103] = 0;
   out_1808211745531574140[104] = 0;
   out_1808211745531574140[105] = 0;
   out_1808211745531574140[106] = 0;
   out_1808211745531574140[107] = 0;
   out_1808211745531574140[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1808211745531574140[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1808211745531574140[110] = 1;
   out_1808211745531574140[111] = 0;
   out_1808211745531574140[112] = 0;
   out_1808211745531574140[113] = 0;
   out_1808211745531574140[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1808211745531574140[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1808211745531574140[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1808211745531574140[117] = 0;
   out_1808211745531574140[118] = 0;
   out_1808211745531574140[119] = 0;
   out_1808211745531574140[120] = 0;
   out_1808211745531574140[121] = 0;
   out_1808211745531574140[122] = 0;
   out_1808211745531574140[123] = 0;
   out_1808211745531574140[124] = 0;
   out_1808211745531574140[125] = 0;
   out_1808211745531574140[126] = 0;
   out_1808211745531574140[127] = 0;
   out_1808211745531574140[128] = 0;
   out_1808211745531574140[129] = 0;
   out_1808211745531574140[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1808211745531574140[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1808211745531574140[132] = 1;
   out_1808211745531574140[133] = 0;
   out_1808211745531574140[134] = 0;
   out_1808211745531574140[135] = 0;
   out_1808211745531574140[136] = 0;
   out_1808211745531574140[137] = 0;
   out_1808211745531574140[138] = 0;
   out_1808211745531574140[139] = 0;
   out_1808211745531574140[140] = 0;
   out_1808211745531574140[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1808211745531574140[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1808211745531574140[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1808211745531574140[144] = 0;
   out_1808211745531574140[145] = 0;
   out_1808211745531574140[146] = 0;
   out_1808211745531574140[147] = 0;
   out_1808211745531574140[148] = 0;
   out_1808211745531574140[149] = 0;
   out_1808211745531574140[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1808211745531574140[151] = 0;
   out_1808211745531574140[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1808211745531574140[153] = 0;
   out_1808211745531574140[154] = 1;
   out_1808211745531574140[155] = 0;
   out_1808211745531574140[156] = 0;
   out_1808211745531574140[157] = 0;
   out_1808211745531574140[158] = 0;
   out_1808211745531574140[159] = 0;
   out_1808211745531574140[160] = 0;
   out_1808211745531574140[161] = 0;
   out_1808211745531574140[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1808211745531574140[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1808211745531574140[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1808211745531574140[165] = 0;
   out_1808211745531574140[166] = 0;
   out_1808211745531574140[167] = 0;
   out_1808211745531574140[168] = 0;
   out_1808211745531574140[169] = 0;
   out_1808211745531574140[170] = 0;
   out_1808211745531574140[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1808211745531574140[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1808211745531574140[173] = 0;
   out_1808211745531574140[174] = 0;
   out_1808211745531574140[175] = 0;
   out_1808211745531574140[176] = 1;
   out_1808211745531574140[177] = 0;
   out_1808211745531574140[178] = 0;
   out_1808211745531574140[179] = 0;
   out_1808211745531574140[180] = 0;
   out_1808211745531574140[181] = 0;
   out_1808211745531574140[182] = 0;
   out_1808211745531574140[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1808211745531574140[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1808211745531574140[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1808211745531574140[186] = 0;
   out_1808211745531574140[187] = 0;
   out_1808211745531574140[188] = 0;
   out_1808211745531574140[189] = 0;
   out_1808211745531574140[190] = 0;
   out_1808211745531574140[191] = 0;
   out_1808211745531574140[192] = 0;
   out_1808211745531574140[193] = 0;
   out_1808211745531574140[194] = 0;
   out_1808211745531574140[195] = 0;
   out_1808211745531574140[196] = 0;
   out_1808211745531574140[197] = 0;
   out_1808211745531574140[198] = 1;
   out_1808211745531574140[199] = 0;
   out_1808211745531574140[200] = 0;
   out_1808211745531574140[201] = 0;
   out_1808211745531574140[202] = 0;
   out_1808211745531574140[203] = 0;
   out_1808211745531574140[204] = 0;
   out_1808211745531574140[205] = 0;
   out_1808211745531574140[206] = 0;
   out_1808211745531574140[207] = 0;
   out_1808211745531574140[208] = 0;
   out_1808211745531574140[209] = 0;
   out_1808211745531574140[210] = 0;
   out_1808211745531574140[211] = 0;
   out_1808211745531574140[212] = 0;
   out_1808211745531574140[213] = 0;
   out_1808211745531574140[214] = 0;
   out_1808211745531574140[215] = 0;
   out_1808211745531574140[216] = 0;
   out_1808211745531574140[217] = 0;
   out_1808211745531574140[218] = 0;
   out_1808211745531574140[219] = 0;
   out_1808211745531574140[220] = 1;
   out_1808211745531574140[221] = 0;
   out_1808211745531574140[222] = 0;
   out_1808211745531574140[223] = 0;
   out_1808211745531574140[224] = 0;
   out_1808211745531574140[225] = 0;
   out_1808211745531574140[226] = 0;
   out_1808211745531574140[227] = 0;
   out_1808211745531574140[228] = 0;
   out_1808211745531574140[229] = 0;
   out_1808211745531574140[230] = 0;
   out_1808211745531574140[231] = 0;
   out_1808211745531574140[232] = 0;
   out_1808211745531574140[233] = 0;
   out_1808211745531574140[234] = 0;
   out_1808211745531574140[235] = 0;
   out_1808211745531574140[236] = 0;
   out_1808211745531574140[237] = 0;
   out_1808211745531574140[238] = 0;
   out_1808211745531574140[239] = 0;
   out_1808211745531574140[240] = 0;
   out_1808211745531574140[241] = 0;
   out_1808211745531574140[242] = 1;
   out_1808211745531574140[243] = 0;
   out_1808211745531574140[244] = 0;
   out_1808211745531574140[245] = 0;
   out_1808211745531574140[246] = 0;
   out_1808211745531574140[247] = 0;
   out_1808211745531574140[248] = 0;
   out_1808211745531574140[249] = 0;
   out_1808211745531574140[250] = 0;
   out_1808211745531574140[251] = 0;
   out_1808211745531574140[252] = 0;
   out_1808211745531574140[253] = 0;
   out_1808211745531574140[254] = 0;
   out_1808211745531574140[255] = 0;
   out_1808211745531574140[256] = 0;
   out_1808211745531574140[257] = 0;
   out_1808211745531574140[258] = 0;
   out_1808211745531574140[259] = 0;
   out_1808211745531574140[260] = 0;
   out_1808211745531574140[261] = 0;
   out_1808211745531574140[262] = 0;
   out_1808211745531574140[263] = 0;
   out_1808211745531574140[264] = 1;
   out_1808211745531574140[265] = 0;
   out_1808211745531574140[266] = 0;
   out_1808211745531574140[267] = 0;
   out_1808211745531574140[268] = 0;
   out_1808211745531574140[269] = 0;
   out_1808211745531574140[270] = 0;
   out_1808211745531574140[271] = 0;
   out_1808211745531574140[272] = 0;
   out_1808211745531574140[273] = 0;
   out_1808211745531574140[274] = 0;
   out_1808211745531574140[275] = 0;
   out_1808211745531574140[276] = 0;
   out_1808211745531574140[277] = 0;
   out_1808211745531574140[278] = 0;
   out_1808211745531574140[279] = 0;
   out_1808211745531574140[280] = 0;
   out_1808211745531574140[281] = 0;
   out_1808211745531574140[282] = 0;
   out_1808211745531574140[283] = 0;
   out_1808211745531574140[284] = 0;
   out_1808211745531574140[285] = 0;
   out_1808211745531574140[286] = 1;
   out_1808211745531574140[287] = 0;
   out_1808211745531574140[288] = 0;
   out_1808211745531574140[289] = 0;
   out_1808211745531574140[290] = 0;
   out_1808211745531574140[291] = 0;
   out_1808211745531574140[292] = 0;
   out_1808211745531574140[293] = 0;
   out_1808211745531574140[294] = 0;
   out_1808211745531574140[295] = 0;
   out_1808211745531574140[296] = 0;
   out_1808211745531574140[297] = 0;
   out_1808211745531574140[298] = 0;
   out_1808211745531574140[299] = 0;
   out_1808211745531574140[300] = 0;
   out_1808211745531574140[301] = 0;
   out_1808211745531574140[302] = 0;
   out_1808211745531574140[303] = 0;
   out_1808211745531574140[304] = 0;
   out_1808211745531574140[305] = 0;
   out_1808211745531574140[306] = 0;
   out_1808211745531574140[307] = 0;
   out_1808211745531574140[308] = 1;
   out_1808211745531574140[309] = 0;
   out_1808211745531574140[310] = 0;
   out_1808211745531574140[311] = 0;
   out_1808211745531574140[312] = 0;
   out_1808211745531574140[313] = 0;
   out_1808211745531574140[314] = 0;
   out_1808211745531574140[315] = 0;
   out_1808211745531574140[316] = 0;
   out_1808211745531574140[317] = 0;
   out_1808211745531574140[318] = 0;
   out_1808211745531574140[319] = 0;
   out_1808211745531574140[320] = 0;
   out_1808211745531574140[321] = 0;
   out_1808211745531574140[322] = 0;
   out_1808211745531574140[323] = 0;
   out_1808211745531574140[324] = 0;
   out_1808211745531574140[325] = 0;
   out_1808211745531574140[326] = 0;
   out_1808211745531574140[327] = 0;
   out_1808211745531574140[328] = 0;
   out_1808211745531574140[329] = 0;
   out_1808211745531574140[330] = 1;
   out_1808211745531574140[331] = 0;
   out_1808211745531574140[332] = 0;
   out_1808211745531574140[333] = 0;
   out_1808211745531574140[334] = 0;
   out_1808211745531574140[335] = 0;
   out_1808211745531574140[336] = 0;
   out_1808211745531574140[337] = 0;
   out_1808211745531574140[338] = 0;
   out_1808211745531574140[339] = 0;
   out_1808211745531574140[340] = 0;
   out_1808211745531574140[341] = 0;
   out_1808211745531574140[342] = 0;
   out_1808211745531574140[343] = 0;
   out_1808211745531574140[344] = 0;
   out_1808211745531574140[345] = 0;
   out_1808211745531574140[346] = 0;
   out_1808211745531574140[347] = 0;
   out_1808211745531574140[348] = 0;
   out_1808211745531574140[349] = 0;
   out_1808211745531574140[350] = 0;
   out_1808211745531574140[351] = 0;
   out_1808211745531574140[352] = 1;
   out_1808211745531574140[353] = 0;
   out_1808211745531574140[354] = 0;
   out_1808211745531574140[355] = 0;
   out_1808211745531574140[356] = 0;
   out_1808211745531574140[357] = 0;
   out_1808211745531574140[358] = 0;
   out_1808211745531574140[359] = 0;
   out_1808211745531574140[360] = 0;
   out_1808211745531574140[361] = 0;
   out_1808211745531574140[362] = 0;
   out_1808211745531574140[363] = 0;
   out_1808211745531574140[364] = 0;
   out_1808211745531574140[365] = 0;
   out_1808211745531574140[366] = 0;
   out_1808211745531574140[367] = 0;
   out_1808211745531574140[368] = 0;
   out_1808211745531574140[369] = 0;
   out_1808211745531574140[370] = 0;
   out_1808211745531574140[371] = 0;
   out_1808211745531574140[372] = 0;
   out_1808211745531574140[373] = 0;
   out_1808211745531574140[374] = 1;
   out_1808211745531574140[375] = 0;
   out_1808211745531574140[376] = 0;
   out_1808211745531574140[377] = 0;
   out_1808211745531574140[378] = 0;
   out_1808211745531574140[379] = 0;
   out_1808211745531574140[380] = 0;
   out_1808211745531574140[381] = 0;
   out_1808211745531574140[382] = 0;
   out_1808211745531574140[383] = 0;
   out_1808211745531574140[384] = 0;
   out_1808211745531574140[385] = 0;
   out_1808211745531574140[386] = 0;
   out_1808211745531574140[387] = 0;
   out_1808211745531574140[388] = 0;
   out_1808211745531574140[389] = 0;
   out_1808211745531574140[390] = 0;
   out_1808211745531574140[391] = 0;
   out_1808211745531574140[392] = 0;
   out_1808211745531574140[393] = 0;
   out_1808211745531574140[394] = 0;
   out_1808211745531574140[395] = 0;
   out_1808211745531574140[396] = 1;
   out_1808211745531574140[397] = 0;
   out_1808211745531574140[398] = 0;
   out_1808211745531574140[399] = 0;
   out_1808211745531574140[400] = 0;
   out_1808211745531574140[401] = 0;
   out_1808211745531574140[402] = 0;
   out_1808211745531574140[403] = 0;
   out_1808211745531574140[404] = 0;
   out_1808211745531574140[405] = 0;
   out_1808211745531574140[406] = 0;
   out_1808211745531574140[407] = 0;
   out_1808211745531574140[408] = 0;
   out_1808211745531574140[409] = 0;
   out_1808211745531574140[410] = 0;
   out_1808211745531574140[411] = 0;
   out_1808211745531574140[412] = 0;
   out_1808211745531574140[413] = 0;
   out_1808211745531574140[414] = 0;
   out_1808211745531574140[415] = 0;
   out_1808211745531574140[416] = 0;
   out_1808211745531574140[417] = 0;
   out_1808211745531574140[418] = 1;
   out_1808211745531574140[419] = 0;
   out_1808211745531574140[420] = 0;
   out_1808211745531574140[421] = 0;
   out_1808211745531574140[422] = 0;
   out_1808211745531574140[423] = 0;
   out_1808211745531574140[424] = 0;
   out_1808211745531574140[425] = 0;
   out_1808211745531574140[426] = 0;
   out_1808211745531574140[427] = 0;
   out_1808211745531574140[428] = 0;
   out_1808211745531574140[429] = 0;
   out_1808211745531574140[430] = 0;
   out_1808211745531574140[431] = 0;
   out_1808211745531574140[432] = 0;
   out_1808211745531574140[433] = 0;
   out_1808211745531574140[434] = 0;
   out_1808211745531574140[435] = 0;
   out_1808211745531574140[436] = 0;
   out_1808211745531574140[437] = 0;
   out_1808211745531574140[438] = 0;
   out_1808211745531574140[439] = 0;
   out_1808211745531574140[440] = 1;
}
void h_4(double *state, double *unused, double *out_4098430510588616918) {
   out_4098430510588616918[0] = state[10] + state[13];
   out_4098430510588616918[1] = state[11] + state[14];
   out_4098430510588616918[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2823963131679719256) {
   out_2823963131679719256[0] = 0;
   out_2823963131679719256[1] = 0;
   out_2823963131679719256[2] = 0;
   out_2823963131679719256[3] = 0;
   out_2823963131679719256[4] = 0;
   out_2823963131679719256[5] = 0;
   out_2823963131679719256[6] = 0;
   out_2823963131679719256[7] = 0;
   out_2823963131679719256[8] = 0;
   out_2823963131679719256[9] = 0;
   out_2823963131679719256[10] = 1;
   out_2823963131679719256[11] = 0;
   out_2823963131679719256[12] = 0;
   out_2823963131679719256[13] = 1;
   out_2823963131679719256[14] = 0;
   out_2823963131679719256[15] = 0;
   out_2823963131679719256[16] = 0;
   out_2823963131679719256[17] = 0;
   out_2823963131679719256[18] = 0;
   out_2823963131679719256[19] = 0;
   out_2823963131679719256[20] = 0;
   out_2823963131679719256[21] = 0;
   out_2823963131679719256[22] = 0;
   out_2823963131679719256[23] = 0;
   out_2823963131679719256[24] = 0;
   out_2823963131679719256[25] = 0;
   out_2823963131679719256[26] = 0;
   out_2823963131679719256[27] = 0;
   out_2823963131679719256[28] = 0;
   out_2823963131679719256[29] = 0;
   out_2823963131679719256[30] = 0;
   out_2823963131679719256[31] = 0;
   out_2823963131679719256[32] = 0;
   out_2823963131679719256[33] = 1;
   out_2823963131679719256[34] = 0;
   out_2823963131679719256[35] = 0;
   out_2823963131679719256[36] = 1;
   out_2823963131679719256[37] = 0;
   out_2823963131679719256[38] = 0;
   out_2823963131679719256[39] = 0;
   out_2823963131679719256[40] = 0;
   out_2823963131679719256[41] = 0;
   out_2823963131679719256[42] = 0;
   out_2823963131679719256[43] = 0;
   out_2823963131679719256[44] = 0;
   out_2823963131679719256[45] = 0;
   out_2823963131679719256[46] = 0;
   out_2823963131679719256[47] = 0;
   out_2823963131679719256[48] = 0;
   out_2823963131679719256[49] = 0;
   out_2823963131679719256[50] = 0;
   out_2823963131679719256[51] = 0;
   out_2823963131679719256[52] = 0;
   out_2823963131679719256[53] = 0;
   out_2823963131679719256[54] = 0;
   out_2823963131679719256[55] = 0;
   out_2823963131679719256[56] = 1;
   out_2823963131679719256[57] = 0;
   out_2823963131679719256[58] = 0;
   out_2823963131679719256[59] = 1;
   out_2823963131679719256[60] = 0;
   out_2823963131679719256[61] = 0;
   out_2823963131679719256[62] = 0;
   out_2823963131679719256[63] = 0;
   out_2823963131679719256[64] = 0;
   out_2823963131679719256[65] = 0;
}
void h_9(double *state, double *unused, double *out_4534930155945164839) {
   out_4534930155945164839[0] = state[10];
   out_4534930155945164839[1] = state[11];
   out_4534930155945164839[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3065152778309309901) {
   out_3065152778309309901[0] = 0;
   out_3065152778309309901[1] = 0;
   out_3065152778309309901[2] = 0;
   out_3065152778309309901[3] = 0;
   out_3065152778309309901[4] = 0;
   out_3065152778309309901[5] = 0;
   out_3065152778309309901[6] = 0;
   out_3065152778309309901[7] = 0;
   out_3065152778309309901[8] = 0;
   out_3065152778309309901[9] = 0;
   out_3065152778309309901[10] = 1;
   out_3065152778309309901[11] = 0;
   out_3065152778309309901[12] = 0;
   out_3065152778309309901[13] = 0;
   out_3065152778309309901[14] = 0;
   out_3065152778309309901[15] = 0;
   out_3065152778309309901[16] = 0;
   out_3065152778309309901[17] = 0;
   out_3065152778309309901[18] = 0;
   out_3065152778309309901[19] = 0;
   out_3065152778309309901[20] = 0;
   out_3065152778309309901[21] = 0;
   out_3065152778309309901[22] = 0;
   out_3065152778309309901[23] = 0;
   out_3065152778309309901[24] = 0;
   out_3065152778309309901[25] = 0;
   out_3065152778309309901[26] = 0;
   out_3065152778309309901[27] = 0;
   out_3065152778309309901[28] = 0;
   out_3065152778309309901[29] = 0;
   out_3065152778309309901[30] = 0;
   out_3065152778309309901[31] = 0;
   out_3065152778309309901[32] = 0;
   out_3065152778309309901[33] = 1;
   out_3065152778309309901[34] = 0;
   out_3065152778309309901[35] = 0;
   out_3065152778309309901[36] = 0;
   out_3065152778309309901[37] = 0;
   out_3065152778309309901[38] = 0;
   out_3065152778309309901[39] = 0;
   out_3065152778309309901[40] = 0;
   out_3065152778309309901[41] = 0;
   out_3065152778309309901[42] = 0;
   out_3065152778309309901[43] = 0;
   out_3065152778309309901[44] = 0;
   out_3065152778309309901[45] = 0;
   out_3065152778309309901[46] = 0;
   out_3065152778309309901[47] = 0;
   out_3065152778309309901[48] = 0;
   out_3065152778309309901[49] = 0;
   out_3065152778309309901[50] = 0;
   out_3065152778309309901[51] = 0;
   out_3065152778309309901[52] = 0;
   out_3065152778309309901[53] = 0;
   out_3065152778309309901[54] = 0;
   out_3065152778309309901[55] = 0;
   out_3065152778309309901[56] = 1;
   out_3065152778309309901[57] = 0;
   out_3065152778309309901[58] = 0;
   out_3065152778309309901[59] = 0;
   out_3065152778309309901[60] = 0;
   out_3065152778309309901[61] = 0;
   out_3065152778309309901[62] = 0;
   out_3065152778309309901[63] = 0;
   out_3065152778309309901[64] = 0;
   out_3065152778309309901[65] = 0;
}
void h_10(double *state, double *unused, double *out_8965664941676640835) {
   out_8965664941676640835[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8965664941676640835[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8965664941676640835[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8597485743186393706) {
   out_8597485743186393706[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8597485743186393706[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8597485743186393706[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8597485743186393706[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8597485743186393706[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8597485743186393706[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8597485743186393706[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8597485743186393706[7] = 0;
   out_8597485743186393706[8] = 0;
   out_8597485743186393706[9] = 0;
   out_8597485743186393706[10] = 0;
   out_8597485743186393706[11] = 0;
   out_8597485743186393706[12] = 0;
   out_8597485743186393706[13] = 0;
   out_8597485743186393706[14] = 0;
   out_8597485743186393706[15] = 0;
   out_8597485743186393706[16] = 1;
   out_8597485743186393706[17] = 0;
   out_8597485743186393706[18] = 0;
   out_8597485743186393706[19] = 1;
   out_8597485743186393706[20] = 0;
   out_8597485743186393706[21] = 0;
   out_8597485743186393706[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8597485743186393706[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8597485743186393706[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8597485743186393706[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8597485743186393706[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8597485743186393706[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8597485743186393706[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8597485743186393706[29] = 0;
   out_8597485743186393706[30] = 0;
   out_8597485743186393706[31] = 0;
   out_8597485743186393706[32] = 0;
   out_8597485743186393706[33] = 0;
   out_8597485743186393706[34] = 0;
   out_8597485743186393706[35] = 0;
   out_8597485743186393706[36] = 0;
   out_8597485743186393706[37] = 0;
   out_8597485743186393706[38] = 0;
   out_8597485743186393706[39] = 1;
   out_8597485743186393706[40] = 0;
   out_8597485743186393706[41] = 0;
   out_8597485743186393706[42] = 1;
   out_8597485743186393706[43] = 0;
   out_8597485743186393706[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8597485743186393706[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8597485743186393706[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8597485743186393706[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8597485743186393706[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8597485743186393706[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8597485743186393706[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8597485743186393706[51] = 0;
   out_8597485743186393706[52] = 0;
   out_8597485743186393706[53] = 0;
   out_8597485743186393706[54] = 0;
   out_8597485743186393706[55] = 0;
   out_8597485743186393706[56] = 0;
   out_8597485743186393706[57] = 0;
   out_8597485743186393706[58] = 0;
   out_8597485743186393706[59] = 0;
   out_8597485743186393706[60] = 0;
   out_8597485743186393706[61] = 0;
   out_8597485743186393706[62] = 1;
   out_8597485743186393706[63] = 0;
   out_8597485743186393706[64] = 0;
   out_8597485743186393706[65] = 1;
}
void h_12(double *state, double *unused, double *out_4431967718199545297) {
   out_4431967718199545297[0] = state[0];
   out_4431967718199545297[1] = state[1];
   out_4431967718199545297[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7843419539711681051) {
   out_7843419539711681051[0] = 1;
   out_7843419539711681051[1] = 0;
   out_7843419539711681051[2] = 0;
   out_7843419539711681051[3] = 0;
   out_7843419539711681051[4] = 0;
   out_7843419539711681051[5] = 0;
   out_7843419539711681051[6] = 0;
   out_7843419539711681051[7] = 0;
   out_7843419539711681051[8] = 0;
   out_7843419539711681051[9] = 0;
   out_7843419539711681051[10] = 0;
   out_7843419539711681051[11] = 0;
   out_7843419539711681051[12] = 0;
   out_7843419539711681051[13] = 0;
   out_7843419539711681051[14] = 0;
   out_7843419539711681051[15] = 0;
   out_7843419539711681051[16] = 0;
   out_7843419539711681051[17] = 0;
   out_7843419539711681051[18] = 0;
   out_7843419539711681051[19] = 0;
   out_7843419539711681051[20] = 0;
   out_7843419539711681051[21] = 0;
   out_7843419539711681051[22] = 0;
   out_7843419539711681051[23] = 1;
   out_7843419539711681051[24] = 0;
   out_7843419539711681051[25] = 0;
   out_7843419539711681051[26] = 0;
   out_7843419539711681051[27] = 0;
   out_7843419539711681051[28] = 0;
   out_7843419539711681051[29] = 0;
   out_7843419539711681051[30] = 0;
   out_7843419539711681051[31] = 0;
   out_7843419539711681051[32] = 0;
   out_7843419539711681051[33] = 0;
   out_7843419539711681051[34] = 0;
   out_7843419539711681051[35] = 0;
   out_7843419539711681051[36] = 0;
   out_7843419539711681051[37] = 0;
   out_7843419539711681051[38] = 0;
   out_7843419539711681051[39] = 0;
   out_7843419539711681051[40] = 0;
   out_7843419539711681051[41] = 0;
   out_7843419539711681051[42] = 0;
   out_7843419539711681051[43] = 0;
   out_7843419539711681051[44] = 0;
   out_7843419539711681051[45] = 0;
   out_7843419539711681051[46] = 1;
   out_7843419539711681051[47] = 0;
   out_7843419539711681051[48] = 0;
   out_7843419539711681051[49] = 0;
   out_7843419539711681051[50] = 0;
   out_7843419539711681051[51] = 0;
   out_7843419539711681051[52] = 0;
   out_7843419539711681051[53] = 0;
   out_7843419539711681051[54] = 0;
   out_7843419539711681051[55] = 0;
   out_7843419539711681051[56] = 0;
   out_7843419539711681051[57] = 0;
   out_7843419539711681051[58] = 0;
   out_7843419539711681051[59] = 0;
   out_7843419539711681051[60] = 0;
   out_7843419539711681051[61] = 0;
   out_7843419539711681051[62] = 0;
   out_7843419539711681051[63] = 0;
   out_7843419539711681051[64] = 0;
   out_7843419539711681051[65] = 0;
}
void h_35(double *state, double *unused, double *out_1708372239267622899) {
   out_1708372239267622899[0] = state[7];
   out_1708372239267622899[1] = state[8];
   out_1708372239267622899[2] = state[9];
}
void H_35(double *state, double *unused, double *out_7857761501672856856) {
   out_7857761501672856856[0] = 0;
   out_7857761501672856856[1] = 0;
   out_7857761501672856856[2] = 0;
   out_7857761501672856856[3] = 0;
   out_7857761501672856856[4] = 0;
   out_7857761501672856856[5] = 0;
   out_7857761501672856856[6] = 0;
   out_7857761501672856856[7] = 1;
   out_7857761501672856856[8] = 0;
   out_7857761501672856856[9] = 0;
   out_7857761501672856856[10] = 0;
   out_7857761501672856856[11] = 0;
   out_7857761501672856856[12] = 0;
   out_7857761501672856856[13] = 0;
   out_7857761501672856856[14] = 0;
   out_7857761501672856856[15] = 0;
   out_7857761501672856856[16] = 0;
   out_7857761501672856856[17] = 0;
   out_7857761501672856856[18] = 0;
   out_7857761501672856856[19] = 0;
   out_7857761501672856856[20] = 0;
   out_7857761501672856856[21] = 0;
   out_7857761501672856856[22] = 0;
   out_7857761501672856856[23] = 0;
   out_7857761501672856856[24] = 0;
   out_7857761501672856856[25] = 0;
   out_7857761501672856856[26] = 0;
   out_7857761501672856856[27] = 0;
   out_7857761501672856856[28] = 0;
   out_7857761501672856856[29] = 0;
   out_7857761501672856856[30] = 1;
   out_7857761501672856856[31] = 0;
   out_7857761501672856856[32] = 0;
   out_7857761501672856856[33] = 0;
   out_7857761501672856856[34] = 0;
   out_7857761501672856856[35] = 0;
   out_7857761501672856856[36] = 0;
   out_7857761501672856856[37] = 0;
   out_7857761501672856856[38] = 0;
   out_7857761501672856856[39] = 0;
   out_7857761501672856856[40] = 0;
   out_7857761501672856856[41] = 0;
   out_7857761501672856856[42] = 0;
   out_7857761501672856856[43] = 0;
   out_7857761501672856856[44] = 0;
   out_7857761501672856856[45] = 0;
   out_7857761501672856856[46] = 0;
   out_7857761501672856856[47] = 0;
   out_7857761501672856856[48] = 0;
   out_7857761501672856856[49] = 0;
   out_7857761501672856856[50] = 0;
   out_7857761501672856856[51] = 0;
   out_7857761501672856856[52] = 0;
   out_7857761501672856856[53] = 1;
   out_7857761501672856856[54] = 0;
   out_7857761501672856856[55] = 0;
   out_7857761501672856856[56] = 0;
   out_7857761501672856856[57] = 0;
   out_7857761501672856856[58] = 0;
   out_7857761501672856856[59] = 0;
   out_7857761501672856856[60] = 0;
   out_7857761501672856856[61] = 0;
   out_7857761501672856856[62] = 0;
   out_7857761501672856856[63] = 0;
   out_7857761501672856856[64] = 0;
   out_7857761501672856856[65] = 0;
}
void h_32(double *state, double *unused, double *out_3490630552210583304) {
   out_3490630552210583304[0] = state[3];
   out_3490630552210583304[1] = state[4];
   out_3490630552210583304[2] = state[5];
   out_3490630552210583304[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5832391986255021319) {
   out_5832391986255021319[0] = 0;
   out_5832391986255021319[1] = 0;
   out_5832391986255021319[2] = 0;
   out_5832391986255021319[3] = 1;
   out_5832391986255021319[4] = 0;
   out_5832391986255021319[5] = 0;
   out_5832391986255021319[6] = 0;
   out_5832391986255021319[7] = 0;
   out_5832391986255021319[8] = 0;
   out_5832391986255021319[9] = 0;
   out_5832391986255021319[10] = 0;
   out_5832391986255021319[11] = 0;
   out_5832391986255021319[12] = 0;
   out_5832391986255021319[13] = 0;
   out_5832391986255021319[14] = 0;
   out_5832391986255021319[15] = 0;
   out_5832391986255021319[16] = 0;
   out_5832391986255021319[17] = 0;
   out_5832391986255021319[18] = 0;
   out_5832391986255021319[19] = 0;
   out_5832391986255021319[20] = 0;
   out_5832391986255021319[21] = 0;
   out_5832391986255021319[22] = 0;
   out_5832391986255021319[23] = 0;
   out_5832391986255021319[24] = 0;
   out_5832391986255021319[25] = 0;
   out_5832391986255021319[26] = 1;
   out_5832391986255021319[27] = 0;
   out_5832391986255021319[28] = 0;
   out_5832391986255021319[29] = 0;
   out_5832391986255021319[30] = 0;
   out_5832391986255021319[31] = 0;
   out_5832391986255021319[32] = 0;
   out_5832391986255021319[33] = 0;
   out_5832391986255021319[34] = 0;
   out_5832391986255021319[35] = 0;
   out_5832391986255021319[36] = 0;
   out_5832391986255021319[37] = 0;
   out_5832391986255021319[38] = 0;
   out_5832391986255021319[39] = 0;
   out_5832391986255021319[40] = 0;
   out_5832391986255021319[41] = 0;
   out_5832391986255021319[42] = 0;
   out_5832391986255021319[43] = 0;
   out_5832391986255021319[44] = 0;
   out_5832391986255021319[45] = 0;
   out_5832391986255021319[46] = 0;
   out_5832391986255021319[47] = 0;
   out_5832391986255021319[48] = 0;
   out_5832391986255021319[49] = 1;
   out_5832391986255021319[50] = 0;
   out_5832391986255021319[51] = 0;
   out_5832391986255021319[52] = 0;
   out_5832391986255021319[53] = 0;
   out_5832391986255021319[54] = 0;
   out_5832391986255021319[55] = 0;
   out_5832391986255021319[56] = 0;
   out_5832391986255021319[57] = 0;
   out_5832391986255021319[58] = 0;
   out_5832391986255021319[59] = 0;
   out_5832391986255021319[60] = 0;
   out_5832391986255021319[61] = 0;
   out_5832391986255021319[62] = 0;
   out_5832391986255021319[63] = 0;
   out_5832391986255021319[64] = 0;
   out_5832391986255021319[65] = 0;
   out_5832391986255021319[66] = 0;
   out_5832391986255021319[67] = 0;
   out_5832391986255021319[68] = 0;
   out_5832391986255021319[69] = 0;
   out_5832391986255021319[70] = 0;
   out_5832391986255021319[71] = 0;
   out_5832391986255021319[72] = 1;
   out_5832391986255021319[73] = 0;
   out_5832391986255021319[74] = 0;
   out_5832391986255021319[75] = 0;
   out_5832391986255021319[76] = 0;
   out_5832391986255021319[77] = 0;
   out_5832391986255021319[78] = 0;
   out_5832391986255021319[79] = 0;
   out_5832391986255021319[80] = 0;
   out_5832391986255021319[81] = 0;
   out_5832391986255021319[82] = 0;
   out_5832391986255021319[83] = 0;
   out_5832391986255021319[84] = 0;
   out_5832391986255021319[85] = 0;
   out_5832391986255021319[86] = 0;
   out_5832391986255021319[87] = 0;
}
void h_13(double *state, double *unused, double *out_6858976564956992067) {
   out_6858976564956992067[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6858976564956992067[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6858976564956992067[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2853644333017370113) {
   out_2853644333017370113[0] = 0;
   out_2853644333017370113[1] = 0;
   out_2853644333017370113[2] = 0;
   out_2853644333017370113[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2853644333017370113[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2853644333017370113[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2853644333017370113[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2853644333017370113[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2853644333017370113[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2853644333017370113[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2853644333017370113[10] = 0;
   out_2853644333017370113[11] = 0;
   out_2853644333017370113[12] = 0;
   out_2853644333017370113[13] = 0;
   out_2853644333017370113[14] = 0;
   out_2853644333017370113[15] = 0;
   out_2853644333017370113[16] = 0;
   out_2853644333017370113[17] = 0;
   out_2853644333017370113[18] = 0;
   out_2853644333017370113[19] = 0;
   out_2853644333017370113[20] = 0;
   out_2853644333017370113[21] = 0;
   out_2853644333017370113[22] = 0;
   out_2853644333017370113[23] = 0;
   out_2853644333017370113[24] = 0;
   out_2853644333017370113[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2853644333017370113[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2853644333017370113[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2853644333017370113[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2853644333017370113[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2853644333017370113[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2853644333017370113[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2853644333017370113[32] = 0;
   out_2853644333017370113[33] = 0;
   out_2853644333017370113[34] = 0;
   out_2853644333017370113[35] = 0;
   out_2853644333017370113[36] = 0;
   out_2853644333017370113[37] = 0;
   out_2853644333017370113[38] = 0;
   out_2853644333017370113[39] = 0;
   out_2853644333017370113[40] = 0;
   out_2853644333017370113[41] = 0;
   out_2853644333017370113[42] = 0;
   out_2853644333017370113[43] = 0;
   out_2853644333017370113[44] = 0;
   out_2853644333017370113[45] = 0;
   out_2853644333017370113[46] = 0;
   out_2853644333017370113[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2853644333017370113[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2853644333017370113[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2853644333017370113[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2853644333017370113[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2853644333017370113[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2853644333017370113[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2853644333017370113[54] = 0;
   out_2853644333017370113[55] = 0;
   out_2853644333017370113[56] = 0;
   out_2853644333017370113[57] = 0;
   out_2853644333017370113[58] = 0;
   out_2853644333017370113[59] = 0;
   out_2853644333017370113[60] = 0;
   out_2853644333017370113[61] = 0;
   out_2853644333017370113[62] = 0;
   out_2853644333017370113[63] = 0;
   out_2853644333017370113[64] = 0;
   out_2853644333017370113[65] = 0;
}
void h_14(double *state, double *unused, double *out_4534930155945164839) {
   out_4534930155945164839[0] = state[10];
   out_4534930155945164839[1] = state[11];
   out_4534930155945164839[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3065152778309309901) {
   out_3065152778309309901[0] = 0;
   out_3065152778309309901[1] = 0;
   out_3065152778309309901[2] = 0;
   out_3065152778309309901[3] = 0;
   out_3065152778309309901[4] = 0;
   out_3065152778309309901[5] = 0;
   out_3065152778309309901[6] = 0;
   out_3065152778309309901[7] = 0;
   out_3065152778309309901[8] = 0;
   out_3065152778309309901[9] = 0;
   out_3065152778309309901[10] = 1;
   out_3065152778309309901[11] = 0;
   out_3065152778309309901[12] = 0;
   out_3065152778309309901[13] = 0;
   out_3065152778309309901[14] = 0;
   out_3065152778309309901[15] = 0;
   out_3065152778309309901[16] = 0;
   out_3065152778309309901[17] = 0;
   out_3065152778309309901[18] = 0;
   out_3065152778309309901[19] = 0;
   out_3065152778309309901[20] = 0;
   out_3065152778309309901[21] = 0;
   out_3065152778309309901[22] = 0;
   out_3065152778309309901[23] = 0;
   out_3065152778309309901[24] = 0;
   out_3065152778309309901[25] = 0;
   out_3065152778309309901[26] = 0;
   out_3065152778309309901[27] = 0;
   out_3065152778309309901[28] = 0;
   out_3065152778309309901[29] = 0;
   out_3065152778309309901[30] = 0;
   out_3065152778309309901[31] = 0;
   out_3065152778309309901[32] = 0;
   out_3065152778309309901[33] = 1;
   out_3065152778309309901[34] = 0;
   out_3065152778309309901[35] = 0;
   out_3065152778309309901[36] = 0;
   out_3065152778309309901[37] = 0;
   out_3065152778309309901[38] = 0;
   out_3065152778309309901[39] = 0;
   out_3065152778309309901[40] = 0;
   out_3065152778309309901[41] = 0;
   out_3065152778309309901[42] = 0;
   out_3065152778309309901[43] = 0;
   out_3065152778309309901[44] = 0;
   out_3065152778309309901[45] = 0;
   out_3065152778309309901[46] = 0;
   out_3065152778309309901[47] = 0;
   out_3065152778309309901[48] = 0;
   out_3065152778309309901[49] = 0;
   out_3065152778309309901[50] = 0;
   out_3065152778309309901[51] = 0;
   out_3065152778309309901[52] = 0;
   out_3065152778309309901[53] = 0;
   out_3065152778309309901[54] = 0;
   out_3065152778309309901[55] = 0;
   out_3065152778309309901[56] = 1;
   out_3065152778309309901[57] = 0;
   out_3065152778309309901[58] = 0;
   out_3065152778309309901[59] = 0;
   out_3065152778309309901[60] = 0;
   out_3065152778309309901[61] = 0;
   out_3065152778309309901[62] = 0;
   out_3065152778309309901[63] = 0;
   out_3065152778309309901[64] = 0;
   out_3065152778309309901[65] = 0;
}
void h_33(double *state, double *unused, double *out_6435807191173586095) {
   out_6435807191173586095[0] = state[16];
   out_6435807191173586095[1] = state[17];
   out_6435807191173586095[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4707204497033999252) {
   out_4707204497033999252[0] = 0;
   out_4707204497033999252[1] = 0;
   out_4707204497033999252[2] = 0;
   out_4707204497033999252[3] = 0;
   out_4707204497033999252[4] = 0;
   out_4707204497033999252[5] = 0;
   out_4707204497033999252[6] = 0;
   out_4707204497033999252[7] = 0;
   out_4707204497033999252[8] = 0;
   out_4707204497033999252[9] = 0;
   out_4707204497033999252[10] = 0;
   out_4707204497033999252[11] = 0;
   out_4707204497033999252[12] = 0;
   out_4707204497033999252[13] = 0;
   out_4707204497033999252[14] = 0;
   out_4707204497033999252[15] = 0;
   out_4707204497033999252[16] = 1;
   out_4707204497033999252[17] = 0;
   out_4707204497033999252[18] = 0;
   out_4707204497033999252[19] = 0;
   out_4707204497033999252[20] = 0;
   out_4707204497033999252[21] = 0;
   out_4707204497033999252[22] = 0;
   out_4707204497033999252[23] = 0;
   out_4707204497033999252[24] = 0;
   out_4707204497033999252[25] = 0;
   out_4707204497033999252[26] = 0;
   out_4707204497033999252[27] = 0;
   out_4707204497033999252[28] = 0;
   out_4707204497033999252[29] = 0;
   out_4707204497033999252[30] = 0;
   out_4707204497033999252[31] = 0;
   out_4707204497033999252[32] = 0;
   out_4707204497033999252[33] = 0;
   out_4707204497033999252[34] = 0;
   out_4707204497033999252[35] = 0;
   out_4707204497033999252[36] = 0;
   out_4707204497033999252[37] = 0;
   out_4707204497033999252[38] = 0;
   out_4707204497033999252[39] = 1;
   out_4707204497033999252[40] = 0;
   out_4707204497033999252[41] = 0;
   out_4707204497033999252[42] = 0;
   out_4707204497033999252[43] = 0;
   out_4707204497033999252[44] = 0;
   out_4707204497033999252[45] = 0;
   out_4707204497033999252[46] = 0;
   out_4707204497033999252[47] = 0;
   out_4707204497033999252[48] = 0;
   out_4707204497033999252[49] = 0;
   out_4707204497033999252[50] = 0;
   out_4707204497033999252[51] = 0;
   out_4707204497033999252[52] = 0;
   out_4707204497033999252[53] = 0;
   out_4707204497033999252[54] = 0;
   out_4707204497033999252[55] = 0;
   out_4707204497033999252[56] = 0;
   out_4707204497033999252[57] = 0;
   out_4707204497033999252[58] = 0;
   out_4707204497033999252[59] = 0;
   out_4707204497033999252[60] = 0;
   out_4707204497033999252[61] = 0;
   out_4707204497033999252[62] = 1;
   out_4707204497033999252[63] = 0;
   out_4707204497033999252[64] = 0;
   out_4707204497033999252[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6175132429151416991) {
  H(in_vec, out_6175132429151416991);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7951279187815065907) {
  err_fun(nom_x, delta_x, out_7951279187815065907);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_637224016576002731) {
  inv_err_fun(nom_x, true_x, out_637224016576002731);
}
void live_H_mod_fun(double *state, double *out_8696275111750558888) {
  H_mod_fun(state, out_8696275111750558888);
}
void live_f_fun(double *state, double dt, double *out_1735690330431513099) {
  f_fun(state,  dt, out_1735690330431513099);
}
void live_F_fun(double *state, double dt, double *out_1808211745531574140) {
  F_fun(state,  dt, out_1808211745531574140);
}
void live_h_4(double *state, double *unused, double *out_4098430510588616918) {
  h_4(state, unused, out_4098430510588616918);
}
void live_H_4(double *state, double *unused, double *out_2823963131679719256) {
  H_4(state, unused, out_2823963131679719256);
}
void live_h_9(double *state, double *unused, double *out_4534930155945164839) {
  h_9(state, unused, out_4534930155945164839);
}
void live_H_9(double *state, double *unused, double *out_3065152778309309901) {
  H_9(state, unused, out_3065152778309309901);
}
void live_h_10(double *state, double *unused, double *out_8965664941676640835) {
  h_10(state, unused, out_8965664941676640835);
}
void live_H_10(double *state, double *unused, double *out_8597485743186393706) {
  H_10(state, unused, out_8597485743186393706);
}
void live_h_12(double *state, double *unused, double *out_4431967718199545297) {
  h_12(state, unused, out_4431967718199545297);
}
void live_H_12(double *state, double *unused, double *out_7843419539711681051) {
  H_12(state, unused, out_7843419539711681051);
}
void live_h_35(double *state, double *unused, double *out_1708372239267622899) {
  h_35(state, unused, out_1708372239267622899);
}
void live_H_35(double *state, double *unused, double *out_7857761501672856856) {
  H_35(state, unused, out_7857761501672856856);
}
void live_h_32(double *state, double *unused, double *out_3490630552210583304) {
  h_32(state, unused, out_3490630552210583304);
}
void live_H_32(double *state, double *unused, double *out_5832391986255021319) {
  H_32(state, unused, out_5832391986255021319);
}
void live_h_13(double *state, double *unused, double *out_6858976564956992067) {
  h_13(state, unused, out_6858976564956992067);
}
void live_H_13(double *state, double *unused, double *out_2853644333017370113) {
  H_13(state, unused, out_2853644333017370113);
}
void live_h_14(double *state, double *unused, double *out_4534930155945164839) {
  h_14(state, unused, out_4534930155945164839);
}
void live_H_14(double *state, double *unused, double *out_3065152778309309901) {
  H_14(state, unused, out_3065152778309309901);
}
void live_h_33(double *state, double *unused, double *out_6435807191173586095) {
  h_33(state, unused, out_6435807191173586095);
}
void live_H_33(double *state, double *unused, double *out_4707204497033999252) {
  H_33(state, unused, out_4707204497033999252);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
